{"version":3,"sources":["components/header/Header.jsx","components/app-menu/AppMenuItem.jsx","components/app-menu/AppMenu.jsx","components/chat/ChatInput.jsx","components/chat/ChatItem.jsx","components/chat/Chat.jsx","components/default-content/DefaultContent.jsx","components/button/ActionButton.jsx","components/search/SearchInput.jsx","components/search/SearchResultItem.jsx","components/search/SearchResult.jsx","components/search/Search.jsx","components/login-form/LoginForm.jsx","components/register-form/RegisterForm.jsx","containers/LoginForm.js","containers/RegisterForm.js","containers/AppMenu.js","containers/Chat.js","pages/Home.js","pages/ComponentTest.js","pages/Login.js","pages/Register.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","menuButton","marginRight","spacing","title","flexGrow","appBar","zIndex","drawer","Header","onMenuSwitch","classes","AppBar","position","className","Toolbar","edge","color","onClick","Icon","Menu","Typography","variant","Hidden","only","AccountCircle","defaultProps","AppMenuItem","history","other","staticContext","pathname","useLocation","ListItem","button","selected","to","ListItemIcon","ListItemText","root","height","drawerOpen","breakpoints","down","width","background","drawerPaper","overflowX","overflowY","whiteSpace","paddingTop","transition","transitions","create","easing","sharp","duration","enteringScreen","drawrePaperClose","transform","AppMenu","open","onMenuClose","list","appMenuItems","map","item","i","component","Link","id","username","Drawer","clsx","paper","List","ChatInput","maxRows","onChange","value","inputRef","FormControl","Input","multiline","placeholder","container","display","justifyContent","margin","message","maxWidth","backgroundColor","palette","primary","light","padding","left","right","center","typography","wordBreak","leftMessage","borderRadius","rightMessage","centerMessage","ChatItem","children","justify","split","Box","flexDirection","overflow","chatInputContainer","bottom","chatInput","chatItemContainer","Chat","messages","onSubmit","onKeyDownSubmit","onTyping","messageValue","chatRef","chatItems","userId","Paper","elevation","onKeyDown","ref","IconButton","Send","DefaultContent","Container","Grid","alignItems","style","fontWeight","ActionButton","fabVariant","fab","Fab","SearchInput","TextField","label","InputProps","endAdornment","fullWidth","size","SearchResultItem","data","ListItemAvatar","Avatar","src","avatarURL","ListItemSecondaryAction","results","SearchResult","searchResultItems","paperRoot","modal","Search","onClose","Modal","avatarContainer","titleContainer","paddingBottom","textAlign","avatarRoot","main","TextFieldRoot","buttonRoot","register","textDecoration","actionButton","LoginForm","showPassword","onShowPasswordClick","Lock","initialValues","password","validationSchema","Yup","shape","max","required","values","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","xs","name","type","error","Boolean","helperText","onBlur","Visibility","VisibilityOff","FormControlLabel","control","Checkbox","Button","RegisterForm","showConfirmPassword","onShowConfirmPasswordClick","confirmPassword","min","oneOf","useState","setShowPassword","console","log","setShowConfirmPassword","userList","initialMessages","chatId","setMessages","setMessage","chatInputRef","useRef","useEffect","current","scrollTop","scrollHeight","e","concat","length","focus","target","Home","searchOpen","setSearchOpen","menuOpen","setMenuOpen","classList","contains","exact","path","mdDown","ComponentTest","containerRoot","Login","Register","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e12e96ae.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport {\r\n  makeStyles,\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Hidden,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  AccountCircle,\r\n  Search as SearchIcon,\r\n} from \"@material-ui/icons\";\r\nimport { ActionButton } from \"../\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n}));\r\n\r\nconst Header = ({ onMenuSwitch, title }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <AppBar position=\"absolute\" className={classes.appBar}>\r\n      <Toolbar>\r\n        <ActionButton\r\n          edge=\"start\"\r\n          className={classes.menuButton}\r\n          color=\"inherit\"\r\n          onClick={onMenuSwitch}\r\n          Icon={<MenuIcon />}\r\n        />\r\n\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          {title}\r\n        </Typography>\r\n        <Hidden only={[\"lg\", \"xl\"]}>\r\n          <div>\r\n            <ActionButton color=\"inherit\" Icon={<SearchIcon />} />\r\n          </div>\r\n        </Hidden>\r\n        <div>\r\n          <ActionButton color=\"inherit\" Icon={<AccountCircle />} />\r\n        </div>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  title: \"Title\",\r\n  onMenuSwitch: null,\r\n};\r\n\r\nHeader.propTypes = {\r\n  onMenuSwitch: PropTypes.func,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport { Header };\r\n","import PropTypes from \"prop-types\";\r\nimport { ListItem, ListItemText, ListItemIcon } from \"@material-ui/core\";\r\nimport { TurnedIn as DefaultIcon } from \"@material-ui/icons\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nconst AppMenuItem = ({ history, title, Icon, staticContext, ...other }) => {\r\n  const { pathname } = useLocation();\r\n\r\n  return (\r\n    <ListItem button {...other} selected={pathname === other.to}>\r\n      <ListItemIcon>{Icon}</ListItemIcon>\r\n      <ListItemText>{title}</ListItemText>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nAppMenuItem.defaultProps = {\r\n  title: \"Item\",\r\n  Icon: <DefaultIcon />,\r\n};\r\n\r\nAppMenuItem.propTypes = {\r\n  title: PropTypes.string,\r\n  Icon: PropTypes.element,\r\n};\r\n\r\nexport { AppMenuItem };\r\n","import PropTypes from \"prop-types\";\r\nimport { Drawer, makeStyles, List } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ChatBubble as ChatIcon } from \"@material-ui/icons\";\r\nimport clsx from \"clsx\";\r\nimport { AppMenuItem } from \"./AppMenuItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100%\",\r\n  },\r\n  drawerOpen: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      position: \"absolute\",\r\n      zIndex: 1200,\r\n      width: \"100%\",\r\n      background: \"rgba(0, 0, 0, 0.5)\",\r\n    },\r\n  },\r\n  drawerPaper: {\r\n    overflowX: \"hidden\",\r\n    overflowY: \"auto\",\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: 320,\r\n    height: \"100%\",\r\n    paddingTop: 64,\r\n    transition: theme.transitions.create([\"width\", \"transform\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      position: \"absolute\",\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      paddingTop: 56,\r\n    },\r\n  },\r\n  drawrePaperClose: {\r\n    width: theme.spacing(8),\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: 320,\r\n      transform: \"translateX(-100%)\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst AppMenu = ({ open, onMenuClose, list }) => {\r\n  const classes = useStyles();\r\n\r\n  const appMenuItems = list.map((item, i) => (\r\n    <AppMenuItem\r\n      key={i}\r\n      component={Link}\r\n      to={`/chat/${item.id}`}\r\n      title={item.username}\r\n      Icon={<ChatIcon />}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      classes={{\r\n        root: clsx({\r\n          [classes.root]: true,\r\n          [classes.drawerOpen]: open,\r\n        }),\r\n        paper: clsx({\r\n          [classes.drawerPaper]: true,\r\n          [classes.drawrePaperClose]: !open,\r\n        }),\r\n      }}\r\n      onClick={onMenuClose}\r\n    >\r\n      <List component=\"nav\">{appMenuItems}</List>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nAppMenu.defaultProps = {\r\n  open: false,\r\n  onMenuClose: null,\r\n  list: [],\r\n};\r\n\r\nAppMenu.propTypes = {\r\n  open: PropTypes.bool,\r\n  onMenuClose: PropTypes.func,\r\n  list: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nexport { AppMenu };\r\n","import PropTypes from \"prop-types\";\r\nimport { FormControl, Input } from \"@material-ui/core\";\r\n\r\nconst ChatInput = ({ classes, maxRows, onChange, value, inputRef }) => {\r\n  return (\r\n    <FormControl className={classes}>\r\n      <Input\r\n        id=\"input\"\r\n        multiline\r\n        placeholder=\"Enter a message\"\r\n        maxRows={maxRows}\r\n        onChange={onChange}\r\n        value={value}\r\n        inputRef={inputRef}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nChatInput.defaultProps = {\r\n  classes: \"\",\r\n  maxRows: 6,\r\n};\r\n\r\nChatInput.propTypes = {\r\n  classes: PropTypes.string,\r\n  maxRows: PropTypes.number,\r\n  onChange: PropTypes.func,\r\n  value: PropTypes.string,\r\n  ref: PropTypes.oneOfType([\r\n    PropTypes.func,\r\n    PropTypes.shape({ current: PropTypes.any }),\r\n  ]),\r\n};\r\n\r\nexport { ChatInput };\r\n","import PropTypes from \"prop-types\";\r\nimport { Typography, Box, makeStyles } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    justifyContent: \"flex-start\",\r\n    margin: \"5px 0\",\r\n  },\r\n  message: {\r\n    maxWidth: \"70%\",\r\n    backgroundColor: theme.palette.primary.light,\r\n    padding: 8,\r\n    color: \"#fff\",\r\n  },\r\n  left: {\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  right: {\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  center: {\r\n    justifyContent: \"center\",\r\n  },\r\n  typography: {\r\n    wordBreak: \"break-word\",\r\n  },\r\n  leftMessage: {\r\n    borderRadius: \"15px 10px 10px 0\",\r\n  },\r\n  rightMessage: {\r\n    borderRadius: \"10px 15px 0 10px\",\r\n  },\r\n  centerMessage: {\r\n    borderRadius: 15,\r\n  },\r\n}));\r\n\r\nconst ChatItem = ({ children, justify, ...other }) => {\r\n  const classes = useStyles();\r\n\r\n  const message = children.split(/\\n/).map((item, i) => (\r\n    <Typography\r\n      key={`message-${i}`}\r\n      variant=\"subtitle1\"\r\n      component=\"p\"\r\n      {...other}\r\n    >\r\n      {item ? item : <span>&ensp;</span>}\r\n    </Typography>\r\n  ));\r\n\r\n  return (\r\n    <Box className={clsx(classes.container, classes[justify])}>\r\n      <Box className={clsx(classes[`${justify}Message`], classes.message)}>\r\n        {message}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nChatItem.defaultProps = {\r\n  children: null,\r\n  justify: \"left\",\r\n};\r\n\r\nChatItem.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([null])]),\r\n  justify: PropTypes.oneOf([\"center\", \"left\", \"right\"]),\r\n};\r\n\r\nexport { ChatItem };\r\n","import PropTypes from \"prop-types\";\r\nimport { Paper, makeStyles, Box, IconButton } from \"@material-ui/core\";\r\nimport { Send as SendIcon } from \"@material-ui/icons\";\r\nimport { ChatInput } from \"./ChatInput\";\r\nimport { ChatItem } from \"./ChatItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    position: \"relative\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(2),\r\n    height: \"100%\",\r\n    maxWidth: 800,\r\n    borderRadius: 10,\r\n    overflow: \"hidden\",\r\n  },\r\n  chatInputContainer: {\r\n    display: \"flex\",\r\n    bottom: 0,\r\n    width: \"100%\",\r\n    left: 0,\r\n  },\r\n  chatInput: {\r\n    width: \"100%\",\r\n  },\r\n  chatItemContainer: {\r\n    padding: theme.spacing(0, 2, 3, 0),\r\n    overflow: \"auto\",\r\n  },\r\n}));\r\n\r\nconst Chat = ({\r\n  messages,\r\n  onSubmit,\r\n  onKeyDownSubmit,\r\n  onTyping,\r\n  messageValue,\r\n  chatRef,\r\n  inputRef,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const chatItems = messages.map((item) => (\r\n    <ChatItem key={item.id} justify={item.userId === 1 ? \"right\" : \"left\"}>\r\n      {item.message}\r\n    </ChatItem>\r\n  ));\r\n\r\n  return (\r\n    <Paper\r\n      classes={{ root: classes.root }}\r\n      elevation={3}\r\n      onKeyDown={onKeyDownSubmit}\r\n    >\r\n      <Box className={classes.chatItemContainer} ref={chatRef}>\r\n        {chatItems}\r\n      </Box>\r\n      <Box className={classes.chatInputContainer}>\r\n        <ChatInput\r\n          classes={classes.chatInput}\r\n          onChange={onTyping}\r\n          value={messageValue}\r\n          inputRef={inputRef}\r\n        />\r\n        <IconButton color=\"primary\" onClick={onSubmit}>\r\n          <SendIcon />\r\n        </IconButton>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nChat.defaultProps = {\r\n  messages: [],\r\n};\r\n\r\nChat.propTypes = {\r\n  messages: PropTypes.arrayOf(PropTypes.object),\r\n  onSubmit: PropTypes.func,\r\n  onTyping: PropTypes.func,\r\n  messageValue: PropTypes.string,\r\n  onKeyDownSubmit: PropTypes.func,\r\n  inputRef: PropTypes.oneOfType([\r\n    PropTypes.func,\r\n    PropTypes.shape({ current: PropTypes.any }),\r\n  ]),\r\n  chatRef: PropTypes.oneOfType([\r\n    PropTypes.func,\r\n    PropTypes.shape({ current: PropTypes.any }),\r\n  ]),\r\n};\r\n\r\nexport { Chat };\r\n","import { Container, Grid, Typography } from \"@material-ui/core\";\r\n\r\nconst DefaultContent = () => {\r\n  return (\r\n    <Container maxWidth={false}>\r\n      <Grid\r\n        container\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        style={{ height: \"100%\" }}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h3\" component=\"h3\" style={{ fontWeight: 300 }}>\r\n            Select a chat\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport { DefaultContent };\r\n","import PropTypes from \"prop-types\";\r\nimport { Fab, IconButton } from \"@material-ui/core\";\r\n\r\nconst ActionButton = ({\r\n  classes,\r\n  color,\r\n  Icon,\r\n  variant,\r\n  fabVariant,\r\n  fab,\r\n  ...other\r\n}) => {\r\n  return (\r\n    <>\r\n      {fab ? (\r\n        <Fab classes={classes} color={color} variant={fabVariant} {...other}>\r\n          {Icon}\r\n        </Fab>\r\n      ) : (\r\n        <IconButton classes={classes} color={color} {...other}>\r\n          {Icon}\r\n        </IconButton>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nActionButton.defaultProps = {\r\n  classes: {},\r\n  color: \"default\",\r\n  Icon: \"\",\r\n  fab: false,\r\n  fabVariant: \"circular\",\r\n};\r\n\r\nActionButton.propTypes = {\r\n  classes: PropTypes.oneOfType([\r\n    PropTypes.objectOf(PropTypes.string),\r\n    PropTypes.string,\r\n  ]),\r\n  color: PropTypes.string,\r\n  Icon: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\r\n  fab: PropTypes.bool,\r\n  fabVariant: PropTypes.oneOf([\"circular\", \"extended\", \"round\"]),\r\n};\r\n\r\nexport { ActionButton };\r\n","import PropTypes from \"prop-types\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Search as SearchIcon } from \"@material-ui/icons\";\r\n\r\nconst SearchInput = ({ variant, value, onChange }) => {\r\n  return (\r\n    <TextField\r\n      variant={variant}\r\n      label=\"Поиск\"\r\n      InputProps={{ endAdornment: <SearchIcon /> }}\r\n      value={value}\r\n      onChange={onChange}\r\n      fullWidth\r\n      size=\"small\"\r\n    />\r\n  );\r\n};\r\n\r\nSearchInput.defaultProps = {\r\n  variant: \"outlined\",\r\n};\r\n\r\nSearchInput.propTypes = {\r\n  variant: PropTypes.oneOf([\"outlined\", \"filled\"]),\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport { SearchInput };\r\n","import PropTypes from \"prop-types\";\r\nimport {\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  ListItemAvatar,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport { Chat as ChatIcon } from \"@material-ui/icons\";\r\nimport { ActionButton } from \"../\";\r\n\r\nconst SearchResultItem = ({ data, onClick }) => {\r\n  return (\r\n    <ListItem button>\r\n      <ListItemAvatar>\r\n        <Avatar src={data.avatarURL} />\r\n      </ListItemAvatar>\r\n      <ListItemText primary={data.username} />\r\n      <ListItemSecondaryAction>\r\n        <ActionButton Icon={<ChatIcon />} color=\"primary\" onClick={onClick} />\r\n      </ListItemSecondaryAction>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nSearchResultItem.defaultProps = {\r\n  data: {\r\n    username: \"Anonymous\",\r\n    avatarURL: \"\",\r\n  },\r\n};\r\n\r\nSearchResultItem.propTypes = {\r\n  data: PropTypes.shape({\r\n    username: PropTypes.string.isRequired,\r\n    avatarURL: PropTypes.string.isRequired,\r\n  }),\r\n};\r\n\r\nexport { SearchResultItem };\r\n","import { List } from \"@material-ui/core\";\r\nimport { SearchResultItem } from \"./SearchResultItem\";\r\n\r\nconst results = [\r\n  {\r\n    id: 1,\r\n    username: \"Sovarim\",\r\n    avatarURL:\r\n      \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse1.mm.bing.net%2Fth%3Fid%3DOIP.8b73qPicR8REHeclBVgGoQHaHa%26pid%3DApi&f=1\",\r\n  },\r\n  {\r\n    id: 2,\r\n    username: \"Ivarim\",\r\n    avatarURL:\r\n      \"https://whatsism.com/uploads/posts/2018-07/1530546770_rmk_vdjbx10.jpg\",\r\n  },\r\n];\r\n\r\nconst SearchResult = () => {\r\n  const searchResultItems = results.map((item) => (\r\n    <SearchResultItem key={item.id} data={item} />\r\n  ));\r\n\r\n  return <List>{searchResultItems}</List>;\r\n};\r\n\r\nexport { SearchResult };\r\n","import PropTypes from \"prop-types\";\r\nimport { Modal, Paper, makeStyles, Container } from \"@material-ui/core\";\r\nimport { SearchInput } from \"./SearchInput\";\r\nimport { SearchResult } from \"./SearchResult\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paperRoot: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  modal: {\r\n    paddingTop: \"5%\",\r\n  },\r\n}));\r\n\r\nconst Search = ({ open, onClose }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Modal open={open} className={classes.modal} onClose={onClose}>\r\n      <Container maxWidth=\"sm\">\r\n        <Paper elevation={2} classes={{ root: classes.paperRoot }}>\r\n          <SearchInput />\r\n          <SearchResult />\r\n        </Paper>\r\n      </Container>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nSearch.defaultProps = {\r\n  open: false,\r\n};\r\n\r\nSearch.propTypes = {\r\n  open: PropTypes.bool,\r\n  onClose: PropTypes.func,\r\n};\r\n\r\nexport { Search };\r\n","import PropTypes from \"prop-types\";\r\nimport {\r\n  Typography,\r\n  TextField,\r\n  Box,\r\n  makeStyles,\r\n  Grid,\r\n  Avatar,\r\n  Button,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Lock as LockIcon,\r\n  Visibility,\r\n  VisibilityOff,\r\n} from \"@material-ui/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { ActionButton } from \"../\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  avatarContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  titleContainer: {\r\n    paddingBottom: 20,\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n  },\r\n  avatarRoot: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  TextFieldRoot: {\r\n    width: \"100%\",\r\n  },\r\n  buttonRoot: {\r\n    width: \"100%\",\r\n  },\r\n  register: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    \"& .MuiTypography-root\": {\r\n      textDecoration: \"none\",\r\n      \"&:hover\": {\r\n        textDecoration: \"underline\",\r\n      },\r\n    },\r\n  },\r\n  actionButton: {\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nconst LoginForm = ({ showPassword, onShowPasswordClick, onSubmit }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box>\r\n      <Box className={classes.titleContainer}>\r\n        <Box className={classes.avatarContainer}>\r\n          <Avatar classes={{ root: classes.avatarRoot }}>\r\n            <LockIcon />\r\n          </Avatar>\r\n        </Box>\r\n        <Typography\r\n          variant=\"h5\"\r\n          component=\"h1\"\r\n          classes={{ root: classes.title }}\r\n        >\r\n          Log in\r\n        </Typography>\r\n      </Box>\r\n      <Formik\r\n        initialValues={{ username: \"\", password: \"\" }}\r\n        validationSchema={Yup.object().shape({\r\n          username: Yup.string().max(255).required(\"username is required\"),\r\n          password: Yup.string().max(255).required(\"password is required\"),\r\n        })}\r\n        onSubmit={onSubmit}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n        }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  id=\"username\"\r\n                  name=\"username\"\r\n                  type=\"text\"\r\n                  error={Boolean(touched.username && errors.username)}\r\n                  helperText={touched.username && errors.username}\r\n                  classes={{ root: classes.TextFieldRoot }}\r\n                  variant=\"outlined\"\r\n                  label=\"Username\"\r\n                  value={values.username}\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  helperText={touched.password && errors.password}\r\n                  classes={{ root: classes.TextFieldRoot }}\r\n                  variant=\"outlined\"\r\n                  label=\"Password\"\r\n                  value={values.password}\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <ActionButton\r\n                        classes={{ root: classes.actionButton }}\r\n                        Icon={showPassword ? <Visibility /> : <VisibilityOff />}\r\n                        onClick={onShowPasswordClick}\r\n                      />\r\n                    ),\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormControl>\r\n                  <FormControlLabel\r\n                    control={<Checkbox id=\"rememberMe\" color=\"primary\" />}\r\n                    label=\"Remeber me\"\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  classes={{ root: classes.buttonRoot }}\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  type=\"submit\"\r\n                >\r\n                  Log in\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={12} classes={{ root: classes.register }}>\r\n                <Typography variant=\"subtitle1\" component={Link} to=\"/register\">\r\n                  Register\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </Box>\r\n  );\r\n};\r\n\r\nLoginForm.defaultProps = {\r\n  showPassword: false,\r\n};\r\n\r\nLoginForm.propTypes = {\r\n  formData: PropTypes.shape({\r\n    username: PropTypes.string.isRequired,\r\n    password: PropTypes.string.isRequired,\r\n  }),\r\n  onChange: PropTypes.func,\r\n  showPassword: PropTypes.bool,\r\n  onShowPasswordClick: PropTypes.func,\r\n};\r\n\r\nexport { LoginForm };\r\n","import PropTypes from \"prop-types\";\r\nimport {\r\n  Typography,\r\n  TextField,\r\n  Box,\r\n  makeStyles,\r\n  Grid,\r\n  Avatar,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Lock as LockIcon,\r\n  Visibility,\r\n  VisibilityOff,\r\n} from \"@material-ui/icons\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { ActionButton } from \"../\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  avatarContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  titleContainer: {\r\n    paddingBottom: 20,\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n  },\r\n  avatarRoot: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  TextFieldRoot: {\r\n    width: \"100%\",\r\n  },\r\n  buttonRoot: {\r\n    width: \"100%\",\r\n  },\r\n  register: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    \"& .MuiTypography-root\": {\r\n      textDecoration: \"none\",\r\n      \"&:hover\": {\r\n        textDecoration: \"underline\",\r\n      },\r\n    },\r\n  },\r\n  actionButton: {\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nconst RegisterForm = ({\r\n  onSubmit,\r\n  showPassword,\r\n  showConfirmPassword,\r\n  onShowPasswordClick,\r\n  onShowConfirmPasswordClick,\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box>\r\n      <Box className={classes.titleContainer}>\r\n        <Box className={classes.avatarContainer}>\r\n          <Avatar classes={{ root: classes.avatarRoot }}>\r\n            <LockIcon />\r\n          </Avatar>\r\n        </Box>\r\n        <Typography\r\n          variant=\"h5\"\r\n          component=\"h1\"\r\n          classes={{ root: classes.title }}\r\n        >\r\n          Register\r\n        </Typography>\r\n      </Box>\r\n      <Formik\r\n        initialValues={{ username: \"\", password: \"\", confirmPassword: \"\" }}\r\n        validationSchema={Yup.object().shape({\r\n          username: Yup.string()\r\n            .min(4)\r\n            .max(255)\r\n            .required(\"username is required\"),\r\n          password: Yup.string()\r\n            .min(8)\r\n            .max(255)\r\n            .required(\"password is required\"),\r\n          confirmPassword: Yup.string()\r\n            .oneOf([Yup.ref(\"password\")], \"passwords must match\")\r\n            .required(\"сonfirm your password\"),\r\n        })}\r\n        onSubmit={onSubmit}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n        }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  id=\"username\"\r\n                  name=\"username\"\r\n                  type=\"text\"\r\n                  error={Boolean(touched.username && errors.username)}\r\n                  helperText={touched.username && errors.username}\r\n                  classes={{ root: classes.TextFieldRoot }}\r\n                  variant=\"outlined\"\r\n                  label=\"Username\"\r\n                  value={values.username}\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  helperText={touched.password && errors.password}\r\n                  classes={{ root: classes.TextFieldRoot }}\r\n                  variant=\"outlined\"\r\n                  label=\"Password\"\r\n                  value={values.password}\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <ActionButton\r\n                        classes={{ root: classes.actionButton }}\r\n                        Icon={showPassword ? <Visibility /> : <VisibilityOff />}\r\n                        onClick={onShowPasswordClick}\r\n                      />\r\n                    ),\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  id=\"confirmPassword\"\r\n                  name=\"confirmPassword\"\r\n                  type={showConfirmPassword ? \"text\" : \"password\"}\r\n                  error={Boolean(\r\n                    touched.confirmPassword && errors.confirmPassword\r\n                  )}\r\n                  helperText={touched.confirmPassword && errors.confirmPassword}\r\n                  classes={{ root: classes.TextFieldRoot }}\r\n                  variant=\"outlined\"\r\n                  label=\"Confirm Password\"\r\n                  value={values.confirmPassword}\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <ActionButton\r\n                        classes={{ root: classes.actionButton }}\r\n                        Icon={\r\n                          showConfirmPassword ? (\r\n                            <Visibility />\r\n                          ) : (\r\n                            <VisibilityOff />\r\n                          )\r\n                        }\r\n                        onClick={onShowConfirmPasswordClick}\r\n                      />\r\n                    ),\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  classes={{ root: classes.buttonRoot }}\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  type=\"submit\"\r\n                >\r\n                  Register\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </Box>\r\n  );\r\n};\r\n\r\nRegisterForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport { RegisterForm };\r\n","import { useState } from \"react\";\r\nimport { LoginForm as BaseLoginForm } from \"../components\";\r\n\r\nconst LoginForm = () => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleSubmit = (values) => {\r\n    console.log(values);\r\n  };\r\n\r\n  const handleShowPassword = () => {\r\n    setShowPassword((value) => !value);\r\n  };\r\n\r\n  return (\r\n    <BaseLoginForm\r\n      showPassword={showPassword}\r\n      onShowPasswordClick={handleShowPassword}\r\n      onSubmit={handleSubmit}\r\n    />\r\n  );\r\n};\r\n\r\nexport { LoginForm };\r\n","import { useState } from \"react\";\r\nimport { RegisterForm as BaseRegisterForm } from \"../components\";\r\n\r\nconst RegisterForm = () => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n\r\n  const handleSubmit = ({ confirmPassword, ...values }) => {\r\n    console.log(values);\r\n  };\r\n\r\n  const handleShowPassword = () => {\r\n    setShowPassword((value) => !value);\r\n  };\r\n\r\n  const handleShowConfirmPassword = () => {\r\n    setShowConfirmPassword((value) => !value);\r\n  };\r\n\r\n  return (\r\n    <BaseRegisterForm\r\n      showPassword={showPassword}\r\n      showConfirmPassword={showConfirmPassword}\r\n      onShowPasswordClick={handleShowPassword}\r\n      onShowConfirmPasswordClick={handleShowConfirmPassword}\r\n      onSubmit={handleSubmit}\r\n    />\r\n  );\r\n};\r\n\r\nexport { RegisterForm };\r\n","import { AppMenu as BaseAppMenu } from \"../components\";\r\n\r\nconst userList = [\r\n  {\r\n    id: 1,\r\n    username: \"Sovarim\",\r\n  },\r\n  {\r\n    id: 2,\r\n    username: \"Persival\",\r\n  },\r\n  {\r\n    id: 3,\r\n    username: \"King\",\r\n  },\r\n];\r\n\r\nconst AppMenu = ({ open, onMenuClose }) => {\r\n  return <BaseAppMenu open={open} onMenuClose={onMenuClose} list={userList} />;\r\n};\r\n\r\nexport { AppMenu };\r\n","import { useState, useRef, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { Chat as BaseChat } from \"../components\";\r\n\r\nconst initialMessages = [\r\n  {\r\n    id: 1,\r\n    userId: 2,\r\n    chatId: 2,\r\n    message: \"Муха ву хьо?\",\r\n  },\r\n  {\r\n    id: 2,\r\n    userId: 1,\r\n    chatId: 2,\r\n    message: \"Дика ву\",\r\n  },\r\n  {\r\n    id: 3,\r\n    userId: 2,\r\n    chatId: 2,\r\n    message: \"Х1умма дуй?\",\r\n  },\r\n  {\r\n    id: 4,\r\n    userId: 1,\r\n    chatId: 2,\r\n    message: \"Дера кхи х1умма ма дац \",\r\n  },\r\n  {\r\n    id: 5,\r\n    userId: 1,\r\n    chatId: 2,\r\n    message:\r\n      \"Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsumLorem ipsumLorem ipsumLorem ipsumLorem ipsumLorem ipsumLorem ipsumLorem ipsum Lorem ipsum \",\r\n  },\r\n];\r\n\r\nconst Chat = () => {\r\n  const { pathname } = useLocation();\r\n\r\n  const [messages, setMessages] = useState(initialMessages);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const chatInputRef = useRef();\r\n  const chatRef = useRef();\r\n\r\n  const handleMessageChange = (e) => {\r\n    setMessage(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!chatRef.current) return;\r\n    chatRef.current.scrollTop = chatRef.current.scrollHeight;\r\n  }, [messages, pathname]);\r\n\r\n  const handleMessageSubmit = (e) => {\r\n    if (!message) return;\r\n    setMessages((value) =>\r\n      value.concat([\r\n        {\r\n          id: value[value.length - 1].id + 1,\r\n          userId: 1,\r\n          chatId: 2,\r\n          message: message,\r\n        },\r\n      ])\r\n    );\r\n    setMessage(\"\");\r\n    chatInputRef.current.focus();\r\n  };\r\n\r\n  return (\r\n    <BaseChat\r\n      messages={messages}\r\n      onSubmit={handleMessageSubmit}\r\n      onTyping={handleMessageChange}\r\n      messageValue={message}\r\n      inputRef={chatInputRef}\r\n      chatRef={chatRef}\r\n    />\r\n  );\r\n};\r\n\r\nexport { Chat };\r\n","import { useState } from \"react\";\r\nimport { Header, DefaultContent, ActionButton, Search } from \"../components\";\r\nimport { AppMenu, Chat } from \"../containers\";\r\nimport { Container, makeStyles, Hidden } from \"@material-ui/core\";\r\nimport { Search as SearchIcon } from \"@material-ui/icons\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    padding: theme.spacing(10, 3, 3, 3),\r\n    backgroundColor: \"#c1c0bb\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      padding: theme.spacing(6, 0, 0, 0),\r\n    },\r\n  },\r\n  actionButton: {\r\n    position: \"fixed\",\r\n    right: 20,\r\n    bottom: 20,\r\n  },\r\n}));\r\n\r\nconst Home = () => {\r\n  const classes = useStyles();\r\n\r\n  const [searchOpen, setSearchOpen] = useState(false);\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n\r\n  const handleSearchOpen = () => {\r\n    setSearchOpen(true);\r\n  };\r\n\r\n  const handleSearchClose = () => {\r\n    setSearchOpen(false);\r\n  };\r\n\r\n  const handleMenuSwitch = (e) => {\r\n    setMenuOpen((value) => !value);\r\n  };\r\n\r\n  const handleMenuClose = (e) => {\r\n    if (!e.target.classList.contains(\"MuiDrawer-root\")) return;\r\n    setMenuOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", width: \"100%\", height: \"100%\" }}>\r\n      <Header onMenuSwitch={handleMenuSwitch} title=\"Chat\" />\r\n      <AppMenu open={menuOpen} onMenuClose={handleMenuClose} />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={DefaultContent} />\r\n        <Route path=\"/chat/:id\">\r\n          <Container className={classes.container} maxWidth={false}>\r\n            <Chat />\r\n          </Container>\r\n        </Route>\r\n      </Switch>\r\n      <Hidden mdDown>\r\n        <ActionButton\r\n          classes={{ root: classes.actionButton }}\r\n          Icon={<SearchIcon />}\r\n          fab\r\n          onClick={handleSearchOpen}\r\n          color=\"primary\"\r\n        />\r\n      </Hidden>\r\n      <Search open={searchOpen} onClose={handleSearchClose} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Home };\r\n","import { Container, makeStyles } from \"@material-ui/core\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { Search } from \"../components\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"100%\",\r\n  },\r\n}));\r\n\r\nconst ComponentTest = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container className={classes.container}>\r\n      <Switch>\r\n        <Route path=\"/component/search-modal\">\r\n          <Search />\r\n        </Route>\r\n      </Switch>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport { ComponentTest };\r\n","import { makeStyles, Container } from \"@material-ui/core\";\r\nimport { LoginForm } from \"../containers\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  containerRoot: {\r\n    paddingTop: \"calc(100vh * .15)\",\r\n  },\r\n}));\r\n\r\nconst Login = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container maxWidth=\"xs\" classes={{ root: classes.containerRoot }}>\r\n      <LoginForm />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport { Login };\r\n","import { Container, makeStyles } from \"@material-ui/core\";\r\nimport { RegisterForm } from \"../containers\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  containerRoot: {\r\n    paddingTop: \"calc(100vh * .15)\",\r\n  },\r\n}));\r\n\r\nconst Register = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container maxWidth=\"xs\" classes={{ root: classes.containerRoot }}>\r\n      <RegisterForm />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport { Register };\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Home, ComponentTest, Login, Register } from \"./pages\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"app-wrapper\">\r\n        <Switch>\r\n          <Route path=\"/component\" component={ComponentTest} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/register\" component={Register} />\r\n          <Route path=\"/\" component={Home} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';  \r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}